@import url('https://fonts.googleapis.com/css2?family=Chicle&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

:root {
    /* COLORS */
    --color-font1: #ffa500;
    --nav-bg: #240524;
    --nav-a-hover-clr: #c0c0c0;
    --main-a-hover-clr: #ffa500;
    --main-a-visited-clr: #008300;

    /* BORDER */
    --border: solid red 1px;
    --border-radius: 10px;

    /* FONT SIZE */
    /* --h1-font-size: 2.5rem; */
    --h1-new-size: clamp(40px, 20vw, 100px);
    /* --h2-font-size: 2rem; */
    --h2-new-size: clamp(30px, 15vw, 75px);
    /* --h3-font-size: 1.5rem; */
    --p-font-size: 1.125rem;
    --caption-font-size: 1.35rem;
    --socials-icon-size: clamp(18px, 9vw, 45px);

    /* PG TRANSITION */
    --transition-value: 0.5s ease-out;
}

html {
    box-sizing: border-box;
    color: var(--nav-bg);
    font-family: 'Chicle', cursive;
    letter-spacing: 1.5px;
}

body {
    position: relative;
    min-block-size: 100vh;
    text-align: center;
    background: url('resources/images/milad-fakurian-PGdW_bHDbpI-unsplash-medium.jpg')
        center/cover fixed;
    overflow: scroll;
}

p {
    font-size: var(--p-font-size);
    line-height: 1.5;
}

.about-p {
    text-align: start;
    max-inline-size: 65ch;
    margin-inline: auto;
}

a {
    text-decoration: none;
    color: var(--nav-bg);
    cursor: pointer;
    transition: color 300ms ease-out 100ms;
}
a:hover,
a:focus {
    color: var(--main-a-hover-clr);
}

nav {
    background-color: var(--nav-bg);
    position: fixed;
    inset-block-start: 0;
    inline-size: 100%;
    z-index: 10;
    clip-path: ellipse(80% 100% at 50% 0%);
    font-size: var(--p-font-size);
}

nav ul {
    display: flex;
    justify-content: space-around;
}

nav li {
    margin: 1rem;
    color: var(--color-font1);
    transition: all 300ms ease-out 100ms;
}

li {
    list-style-type: none;
}

nav a {
    color: inherit;
}

.cur-pg,
[href='#'] {
    color: var(--nav-a-hover-clr);
    transform: scale(1.5);
    cursor: not-allowed;
}

nav a:hover,
nav a:focus,
nav li:hover,
nav li:focus {
    color: var(--nav-a-hover-clr);
    transform: scale(1.5);
}

main {
    padding-block-start: 4rem;
    padding-block-end: 3rem;
    padding-inline: 1rem;
}

main a:visited {
    color: var(--main-a-visited-clr);
}

.orb-shadow {
    border-radius: 120px;
    max-inline-size: min-content;
    max-inline-size: max-content;
    margin-inline: auto;
    margin-block: 5vh;
    box-shadow: inset 0px 0px 5px 2vh rgba(0, 0, 0, 0.2),
        0px 0px 50px 90vh rgba(0, 0, 0, 0.2);
    padding-block: clamp(29px, 4vh, 50px);
    padding-inline: clamp(35px, 10vw, 80px);
}

.orb-shadow p {
    padding-block-end: 2vh;
    padding-inline: 12px;
    font-size: var(--socials-icon-size);
}

h1 {
    /* font-size: var(--h1-font-size); */
    font-size: var(--h1-new-size);
    letter-spacing: 2px;
}

h2 {
    /* font-size: var(--h2-font-size); */
    font-size: var(--h2-new-size);
    letter-spacing: 2px;
}

/* PROJECT CARDS */
#project-list {
    display: flex;
    justify-content: center;
    flex-flow: wrap;
    font-size: 1.125rem;
}

.project {
    margin: 1rem 1rem 2rem;
    padding: 0.75rem;
    inline-size: clamp(300px, 30vw, 500px);
    box-shadow: -10px 20px 30px 5px rgba(0, 0, 0, 0.6);
    border-radius: var(--border-radius);
    border-block-start: 1.5px solid rgba(255, 255, 255, 0.5);
    border-inline-end: 1px solid rgba(255, 255, 255, 0.5);
    background: rgba(255, 255, 255, 0.1);
    line-height: 1.5;
}

.source {
    padding-block-start: 0.5rem;
}

/* IMAGES */
figcaption {
    font-size: var(--caption-font-size);
}

img {
    inline-size: 95%;
    block-size: 200px;
    object-fit: cover; /* consider using scale-down instead of cover. maybe change size of portrait img */
    object-position: top;
    border-radius: var(--border-radius);
    border-block-start: 1px solid rgba(255, 255, 255, 0.5);
    border-inline-end: 0.5px solid rgba(255, 255, 255, 0.5);
    box-shadow: -5px 10px 15px 2.5px rgba(0, 0, 0, 0.4);
    transition: 700ms linear 100ms;
}
img:hover,
img:focus {
    filter: hue-rotate(200deg);
}

footer {
    position: absolute;
    inset-block-end: 0;
    inline-size: 100%;
    padding: 1rem;
    text-align: center;
    max-block-size: 74px;
}

/* CONTACT PG */
#socials {
    display: flex;
    justify-content: center;
    font-size: var(--socials-icon-size);
    padding-block: 2rem;
}
#socials > li {
    padding-inline: 1.2rem;
}
#socials a {
    display: flex;
}

/* PG TRANSITION */
.transition-1 {
    position: fixed;
    inset-block: 0;
    inset-inline: 0;
    z-index: 11;
    background-color: var(--nav-bg);
    /* so it won't be active by default */
    opacity: 0;
    /* blocks interactivity of page while in transition (works on block or inline-block elements */
    pointer-events: none;
    /* need to know duration b/c in js we need to set a timer delay so we can guess & work w/ the transitions */
    transition: var(--transition-value);
}
/* the state when it's active (appears on screen) */
.transition-1.is-active {
    opacity: 1;
    pointer-events: all;
}

/* no need to block pointer-events since sliding in/out */
/* improved pg performance via addressing the Cumulative Layout Shifts w/o use of will-change */
.transition-2 {
    position: fixed;
    z-index: 11;
    background-color: var(--nav-bg);
    block-size: 100%;
    inline-size: 100%;
    transform: translateX(100%);
    transition: var(--transition-value);
}
.transition-2.is-active {
    transform: translateX(0);
}

.transition-3 {
    position: fixed;
    block-size: 100%;
    inline-size: 100%;
    transform: translateY(100%);
    z-index: 11;
    background-color: var(--nav-bg);
    transition: var(--transition-value);
}
.transition-3.is-active {
    transform: translateY(0);
}

.transition-4 {
    position: fixed;
    block-size: 100%;
    inline-size: 100%;
    transform: translateY(-100%);
    z-index: 11;
    background-color: var(--nav-bg);
    transition: var(--transition-value);
}
.transition-4.is-active {
    transform: translateY(0);
}

.transition-5 {
    position: fixed;
    block-size: 100%;
    inline-size: 100%;
    transform: translateX(-100%);
    z-index: 11;
    background-color: var(--nav-bg);
    transition: var(--transition-value);
}
.transition-5.is-active {
    transform: translateX(0);
}

/* @media screen and (min-width: 1025px) {

} */
